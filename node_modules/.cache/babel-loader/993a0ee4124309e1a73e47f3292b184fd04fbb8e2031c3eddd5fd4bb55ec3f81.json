{"ast":null,"code":"var _jsxFileName = \"/Users/pritam/Desktop/my-app/node_modules/@skyscanner/backpack-web/bpk-component-button/src/BpkButtonBase.js\";\n/*\n * Backpack - Skyscanner's Design System\n *\n * Copyright 2016 Skyscanner Ltd\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */import React from 'react';\nimport { propTypes, defaultProps } from './common-types';\nimport COMMON_STYLES from './BpkButtonBase.module.scss';\n\n// This was originally depended upon from the bpk-react-utils package, however\n// we decided to inline it in this particular component so as not to bloat the\n// the bundles of consumers who are not yet on webpack 2\n// We'll revisit this again soon.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cssModules = function () {\n  let styles = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return className => styles[className] ? styles[className] : className;\n};\nconst getCommonClassName = cssModules(COMMON_STYLES);\nconst BpkButton = props => {\n  const {\n    blank,\n    children,\n    className,\n    disabled,\n    href,\n    iconOnly,\n    large,\n    onClick,\n    rel: propRel,\n    submit,\n    ...rest\n  } = props;\n  const classNames = [getCommonClassName('bpk-button')];\n  if (large) {\n    classNames.push(getCommonClassName('bpk-button--large'));\n  }\n  if (iconOnly) {\n    classNames.push(getCommonClassName(large ? 'bpk-button--large-icon-only' : 'bpk-button--icon-only'));\n  }\n  if (className) {\n    classNames.push(className);\n  }\n  const classNameFinal = classNames.join(' ');\n  const target = blank ? '_blank' : null;\n  const rel = blank ? propRel || 'noopener noreferrer' : propRel;\n  if (!disabled && href) {\n    return (\n      /*#__PURE__*/\n      // $FlowFixMe[cannot-spread-inexact] - inexact rest. See 'decisions/flowfixme.md'.\n      _jsxDEV(\"a\", {\n        href: href,\n        className: classNameFinal,\n        onClick: onClick,\n        target: target,\n        rel: rel,\n        ...rest,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this)\n    );\n  }\n\n  // Due to React bug in Chrome, the onClick event fires even if the button is disabled.\n  // Pull request is being worked on (as of 2016-12-22): https://github.com/facebook/react/pull/8329\n  const onClickWrapper = onClick ? function () {\n    if (!disabled) {\n      onClick(...arguments);\n    }\n  } : null;\n  const buttonType = submit ? 'submit' : 'button';\n\n  /* eslint-disable react/button-has-type */\n  return (\n    /*#__PURE__*/\n    // $FlowFixMe[cannot-spread-inexact] - inexact rest. See 'decisions/flowfixme.md'.\n    _jsxDEV(\"button\", {\n      type: buttonType,\n      disabled: disabled,\n      className: classNameFinal,\n      onClick: onClickWrapper,\n      ...rest,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }, this)\n  );\n  /* eslint-enable */\n};\n_c = BpkButton;\nBpkButton.propTypes = {\n  ...propTypes\n};\nBpkButton.defaultProps = {\n  ...defaultProps\n};\nexport default BpkButton;\nexport { cssModules };\nvar _c;\n$RefreshReg$(_c, \"BpkButton\");","map":{"version":3,"names":["React","propTypes","defaultProps","COMMON_STYLES","jsxDEV","_jsxDEV","cssModules","styles","arguments","length","undefined","className","getCommonClassName","BpkButton","props","blank","children","disabled","href","iconOnly","large","onClick","rel","propRel","submit","rest","classNames","push","classNameFinal","join","target","fileName","_jsxFileName","lineNumber","columnNumber","onClickWrapper","buttonType","type","_c","$RefreshReg$"],"sources":["/Users/pritam/Desktop/my-app/node_modules/@skyscanner/backpack-web/bpk-component-button/src/BpkButtonBase.js"],"sourcesContent":["/*\n * Backpack - Skyscanner's Design System\n *\n * Copyright 2016 Skyscanner Ltd\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @flow strict */\n\nimport React from 'react';\n\nimport { type Props, propTypes, defaultProps } from './common-types';\nimport COMMON_STYLES from './BpkButtonBase.module.scss';\n\n// This was originally depended upon from the bpk-react-utils package, however\n// we decided to inline it in this particular component so as not to bloat the\n// the bundles of consumers who are not yet on webpack 2\n// We'll revisit this again soon.\nconst cssModules =\n  (styles: {} = {}) =>\n  (className: string) =>\n    styles[className] ? styles[className] : className;\n\nconst getCommonClassName = cssModules(COMMON_STYLES);\n\nconst BpkButton = (props: Props) => {\n  const {\n    blank,\n    children,\n    className,\n    disabled,\n    href,\n    iconOnly,\n    large,\n    onClick,\n    rel: propRel,\n    submit,\n    ...rest\n  } = props;\n\n  const classNames = [getCommonClassName('bpk-button')];\n\n  if (large) {\n    classNames.push(getCommonClassName('bpk-button--large'));\n  }\n\n  if (iconOnly) {\n    classNames.push(\n      getCommonClassName(\n        large ? 'bpk-button--large-icon-only' : 'bpk-button--icon-only',\n      ),\n    );\n  }\n  if (className) {\n    classNames.push(className);\n  }\n\n  const classNameFinal = classNames.join(' ');\n\n  const target = blank ? '_blank' : null;\n  const rel = blank ? propRel || 'noopener noreferrer' : propRel;\n\n  if (!disabled && href) {\n    return (\n      // $FlowFixMe[cannot-spread-inexact] - inexact rest. See 'decisions/flowfixme.md'.\n      <a\n        href={href}\n        className={classNameFinal}\n        onClick={onClick}\n        target={target}\n        rel={rel}\n        {...rest}\n      >\n        {children}\n      </a>\n    );\n  }\n\n  // Due to React bug in Chrome, the onClick event fires even if the button is disabled.\n  // Pull request is being worked on (as of 2016-12-22): https://github.com/facebook/react/pull/8329\n  const onClickWrapper = onClick\n    ? (...args) => {\n        if (!disabled) {\n          onClick(...args);\n        }\n      }\n    : null;\n\n  const buttonType = submit ? 'submit' : 'button';\n\n  /* eslint-disable react/button-has-type */\n  return (\n    // $FlowFixMe[cannot-spread-inexact] - inexact rest. See 'decisions/flowfixme.md'.\n    <button\n      type={buttonType}\n      disabled={disabled}\n      className={classNameFinal}\n      onClick={onClickWrapper}\n      {...rest}\n    >\n      {children}\n    </button>\n  );\n  /* eslint-enable */\n};\n\nBpkButton.propTypes = { ...propTypes };\nBpkButton.defaultProps = { ...defaultProps };\n\nexport default BpkButton;\nexport { cssModules };\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAIA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAAqBC,SAAS,EAAEC,YAAY,QAAQ,gBAAgB;AACpE,OAAOC,aAAa,MAAM,6BAA6B;;AAEvD;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,UAAU,GACd,SAAAA,CAAA;EAAA,IAACC,MAAU,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAAA,OACfG,SAAiB,IAChBJ,MAAM,CAACI,SAAS,CAAC,GAAGJ,MAAM,CAACI,SAAS,CAAC,GAAGA,SAAS;AAAA;AAErD,MAAMC,kBAAkB,GAAGN,UAAU,CAACH,aAAa,CAAC;AAEpD,MAAMU,SAAS,GAAIC,KAAY,IAAK;EAClC,MAAM;IACJC,KAAK;IACLC,QAAQ;IACRL,SAAS;IACTM,QAAQ;IACRC,IAAI;IACJC,QAAQ;IACRC,KAAK;IACLC,OAAO;IACPC,GAAG,EAAEC,OAAO;IACZC,MAAM;IACN,GAAGC;EACL,CAAC,GAAGX,KAAK;EAET,MAAMY,UAAU,GAAG,CAACd,kBAAkB,CAAC,YAAY,CAAC,CAAC;EAErD,IAAIQ,KAAK,EAAE;IACTM,UAAU,CAACC,IAAI,CAACf,kBAAkB,CAAC,mBAAmB,CAAC,CAAC;EAC1D;EAEA,IAAIO,QAAQ,EAAE;IACZO,UAAU,CAACC,IAAI,CACbf,kBAAkB,CAChBQ,KAAK,GAAG,6BAA6B,GAAG,uBAC1C,CACF,CAAC;EACH;EACA,IAAIT,SAAS,EAAE;IACbe,UAAU,CAACC,IAAI,CAAChB,SAAS,CAAC;EAC5B;EAEA,MAAMiB,cAAc,GAAGF,UAAU,CAACG,IAAI,CAAC,GAAG,CAAC;EAE3C,MAAMC,MAAM,GAAGf,KAAK,GAAG,QAAQ,GAAG,IAAI;EACtC,MAAMO,GAAG,GAAGP,KAAK,GAAGQ,OAAO,IAAI,qBAAqB,GAAGA,OAAO;EAE9D,IAAI,CAACN,QAAQ,IAAIC,IAAI,EAAE;IACrB;MAAA;MACE;MACAb,OAAA;QACEa,IAAI,EAAEA,IAAK;QACXP,SAAS,EAAEiB,cAAe;QAC1BP,OAAO,EAAEA,OAAQ;QACjBS,MAAM,EAAEA,MAAO;QACfR,GAAG,EAAEA,GAAI;QAAA,GACLG,IAAI;QAAAT,QAAA,EAEPA;MAAQ;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR;IAAC;EAER;;EAEA;EACA;EACA,MAAMC,cAAc,GAAGd,OAAO,GAC1B,YAAa;IACX,IAAI,CAACJ,QAAQ,EAAE;MACbI,OAAO,CAAC,GAAAb,SAAO,CAAC;IAClB;EACF,CAAC,GACD,IAAI;EAER,MAAM4B,UAAU,GAAGZ,MAAM,GAAG,QAAQ,GAAG,QAAQ;;EAE/C;EACA;IAAA;IACE;IACAnB,OAAA;MACEgC,IAAI,EAAED,UAAW;MACjBnB,QAAQ,EAAEA,QAAS;MACnBN,SAAS,EAAEiB,cAAe;MAC1BP,OAAO,EAAEc,cAAe;MAAA,GACpBV,IAAI;MAAAT,QAAA,EAEPA;IAAQ;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;EAEX;AACF,CAAC;AAACI,EAAA,GA/EIzB,SAAS;AAiFfA,SAAS,CAACZ,SAAS,GAAG;EAAE,GAAGA;AAAU,CAAC;AACtCY,SAAS,CAACX,YAAY,GAAG;EAAE,GAAGA;AAAa,CAAC;AAE5C,eAAeW,SAAS;AACxB,SAASP,UAAU;AAAG,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}