{"ast":null,"code":"var _jsxFileName = \"/Users/pritam/Desktop/my-app/node_modules/bpk-component-calendar/src/Week.js\";\n/*\n * Backpack - Skyscanner's Design System\n *\n * Copyright 2016 Skyscanner Ltd\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { cssModules, deprecated } from 'bpk-react-utils';\nimport { isSameDay, isSameWeek, isSameMonth, isToday, isWithinRange, startOfMonth, endOfMonth } from './date-utils';\nimport CustomPropTypes, { CALENDAR_SELECTION_TYPE } from './custom-proptypes';\n// TODO: Move this to `Week.scss`\n// This should be using its own css file as `BpkCalendarGrid` is also importing `BpkCalendarGrid.module.scss`\n// and the order of css imports can break the component.\nimport STYLES from './BpkCalendarGrid.module.scss';\nimport { SELECTION_TYPES } from './BpkCalendarDate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getClassName = cssModules(STYLES);\nconst shallowEqualProps = (props1, props2, propList) => {\n  let i = 0;\n  for (; i < propList.length; i += 1) {\n    if (props1[propList[i]] !== props2[propList[i]]) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction or(total, bool) {\n  return total || bool;\n}\n\n/**\n * Determines if the current date is selected\n * @param {Date} date the current date from the calendar\n * @param {Object} selectionConfiguration the current selection configuration\n * @returns {Boolean} true is selected and false if not\n */\nfunction getSelectedDate(date, selectionConfiguration) {\n  const startDate = selectionConfiguration.date || selectionConfiguration.startDate;\n  const {\n    endDate\n  } = selectionConfiguration;\n  const sameStartDay = isSameDay(date, startDate);\n  const sameEndDay = isSameDay(date, endDate);\n  if (startDate && endDate && (sameStartDay || sameEndDay || isWithinRange(date, {\n    start: startDate,\n    end: endDate\n  })) || startDate && !endDate && sameStartDay || sameStartDay) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Gets the correct selection type for the current date\n * @param {Date} date the current date of the calendar\n * @param {Object} selectionConfiguration the current selection configuration\n * @param {Function} formatDateFull function to format dates\n * @param {Date} month the current month of the calendar\n * @param {Number} weekStartsOn index of the first day of the week\n * @param {Boolean} ignoreOutsideDate ignore date outside current month\n * @returns {String} selection type to be passed to the date\n */\nfunction getSelectionType(date, selectionConfiguration, formatDateFull, month, weekStartsOn, ignoreOutsideDate) {\n  const {\n    endDate,\n    startDate\n  } = selectionConfiguration;\n  const sameStartDay = isSameDay(date, startDate);\n  const sameEndDay = isSameDay(date, endDate);\n  const rangeDates = startDate && endDate;\n  const isEmptyCell = !isSameMonth(date, month) && ignoreOutsideDate;\n  if (selectionConfiguration.type === CALENDAR_SELECTION_TYPE.single && selectionConfiguration.date && (selectionConfiguration.date === formatDateFull(date) || formatDateFull(selectionConfiguration.date) === formatDateFull(date))) {\n    return SELECTION_TYPES.single;\n  }\n  if (selectionConfiguration.type === CALENDAR_SELECTION_TYPE.range) {\n    if (startDate && !endDate && sameStartDay || rangeDates && sameStartDay && sameEndDay) {\n      return SELECTION_TYPES.single;\n    }\n    if (isEmptyCell && rangeDates && (isSameWeek(startDate, startOfMonth(startDate), {\n      weekStartsOn\n    }) && isSameWeek(date, startDate, {\n      weekStartsOn\n    }) || isSameWeek(endDate, endOfMonth(endDate), {\n      weekStartsOn\n    }) && isSameWeek(date, endDate, {\n      weekStartsOn\n    }))) {\n      return SELECTION_TYPES.none;\n    }\n    if (isEmptyCell && rangeDates && !isSameMonth(startDate, endDate) && (isSameWeek(startDate, endOfMonth(startDate), {\n      weekStartsOn\n    }) && isSameWeek(date, startDate, {\n      weekStartsOn\n    }) || isSameWeek(endDate, startOfMonth(endDate), {\n      weekStartsOn\n    }) && isSameWeek(date, endDate, {\n      weekStartsOn\n    }))) {\n      return SELECTION_TYPES.middle;\n    }\n    if (rangeDates && isWithinRange(date, {\n      start: startDate,\n      end: endDate\n    }) && !sameStartDay && !sameEndDay) {\n      return SELECTION_TYPES.middle;\n    }\n    if (startDate && formatDateFull(startDate) === formatDateFull(date)) {\n      return SELECTION_TYPES.start;\n    }\n    if (endDate && formatDateFull(endDate) === formatDateFull(date)) {\n      return SELECTION_TYPES.end;\n    }\n  }\n  return SELECTION_TYPES.none;\n}\n\n/**\n * Handles changing selected date when in single mode\n * @param {Object} props current props\n * @param {Object} nextProps next props as the component is updating\n * @returns {Boolean} based on if the date has changed\n */\nconst singleDateHandler = (props, nextProps) => {\n  const currentSelectConfig = props.selectionConfiguration;\n  const nextSelectConfig = nextProps.selectionConfiguration;\n  if ((isSameWeek(nextSelectConfig.date, nextProps.dates[0], {\n    weekStartsOn: nextProps.weekStartsOn\n  }) || isSameWeek(currentSelectConfig.date, props.dates[0], {\n    weekStartsOn: props.weekStartsOn\n  })) && currentSelectConfig.date !== nextSelectConfig.date) {\n    return true;\n  }\n  return false;\n};\n\n/**\n * Handles changing selected date when in range mode\n * @param {Object} props current props\n * @param {Object} nextProps next props as the component is updating\n * @returns {Boolean} based on if the date has changed\n */\nconst rangeDateHandler = (props, nextProps) => {\n  const startDateChanged = !isSameDay(props.selectionConfiguration.startDate, nextProps.selectionConfiguration.startDate);\n  const endDateChanged = !isSameDay(props.selectionConfiguration.endDate, nextProps.selectionConfiguration.endDate);\n  if (startDateChanged || endDateChanged) {\n    return true;\n  }\n  return false;\n};\n\n/*\n  Week - table row containing a week full of DateContainer components\n*/\nclass Week extends Component {\n  shouldComponentUpdate(nextProps) {\n    const shallowProps = ['DateComponent', 'dateModifiers', 'formatDateFull', 'isKeyboardFocusable', 'markOutsideDays', 'markToday', 'onDateClick', 'onDateKeyDown', 'preventKeyboardFocus', 'weekStartsOn', 'dates', 'cellClassName'];\n\n    // If any of the props have changed, component should update.\n    if (!shallowEqualProps(this.props, nextProps, shallowProps)) {\n      return true;\n    }\n\n    // If focusedDate is changing, and it'll be included as part\n    // of either the week we're rendering now or the next week\n    // we'll render, component should update.\n    if ((isSameWeek(nextProps.focusedDate, nextProps.dates[0], {\n      weekStartsOn: nextProps.weekStartsOn\n    }) || isSameWeek(this.props.focusedDate, this.props.dates[0], {\n      weekStartsOn: this.props.weekStartsOn\n    })) && this.props.focusedDate !== nextProps.focusedDate) {\n      return true;\n    }\n\n    // If selected date is changing, and it'll be included as part\n    // of either the week we're rendering now or the next week we'll\n    // render, component should update.\n    if (this.props.selectionConfiguration.type === CALENDAR_SELECTION_TYPE.single && this.props.selectionConfiguration.date) {\n      return singleDateHandler(this.props, nextProps);\n    }\n    if (this.props.selectionConfiguration.type === CALENDAR_SELECTION_TYPE.range) {\n      return rangeDateHandler(this.props, nextProps);\n    }\n\n    // If min date is changing, component should update.\n    if (nextProps.minDate) {\n      if (nextProps.minDate !== this.props.minDate) {\n        return true;\n      }\n      if (!isSameDay(nextProps.minDate, this.props.minDate)) {\n        return true;\n      }\n    }\n\n    // If max date is changing, component should update.\n    if (nextProps.maxDate) {\n      if (nextProps.maxDate !== this.props.maxDate) {\n        return true;\n      }\n      if (!isSameDay(nextProps.maxDate, this.props.maxDate)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  render() {\n    const {\n      DateComponent,\n      dateModifiers,\n      dateProps,\n      focusedDate,\n      formatDateFull,\n      ignoreOutsideDate,\n      isKeyboardFocusable,\n      markOutsideDays,\n      markToday,\n      maxDate,\n      minDate,\n      month,\n      onDateClick,\n      onDateKeyDown,\n      preventKeyboardFocus,\n      selectionConfiguration,\n      weekStartsOn\n    } = this.props;\n    if (ignoreOutsideDate) {\n      const daysOutside = this.props.dates.map(date => isSameMonth(date, month));\n      const shouldRender = daysOutside.reduce(or);\n      if (!shouldRender) {\n        return null;\n      }\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getClassName('bpk-calendar-grid__week'),\n      children: this.props.dates.map(date => {\n        const isBlocked = minDate && maxDate ? !isWithinRange(date, {\n          start: minDate,\n          end: maxDate\n        }) : false;\n        const dateSelectionType = getSelectionType(date, selectionConfiguration, formatDateFull, month, weekStartsOn, ignoreOutsideDate);\n        return /*#__PURE__*/_jsxDEV(DateContainer, {\n          className: this.props.cellClassName,\n          isEmptyCell: !isSameMonth(date, month) && ignoreOutsideDate,\n          isBlocked: isBlocked,\n          selectionType: dateSelectionType,\n          children: /*#__PURE__*/_jsxDEV(DateComponent, {\n            date: date,\n            modifiers: dateModifiers,\n            \"aria-label\": formatDateFull(date),\n            onClick: onDateClick,\n            onDateKeyDown: onDateKeyDown,\n            preventKeyboardFocus: preventKeyboardFocus,\n            isKeyboardFocusable: isKeyboardFocusable,\n            isFocused: isSameDay(date, focusedDate),\n            isSelected: getSelectedDate(date, selectionConfiguration),\n            isBlocked: isBlocked,\n            isOutside: markOutsideDays && !isSameMonth(date, month),\n            isToday: markToday && isToday(date),\n            selectionType: dateSelectionType,\n            ...dateProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 15\n          }, this)\n        }, date.getDate(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this);\n  }\n}\nWeek.propTypes = {\n  DateComponent: PropTypes.elementType.isRequired,\n  dateModifiers: CustomPropTypes.DateModifiers.isRequired,\n  dates: PropTypes.arrayOf(Date).isRequired,\n  formatDateFull: PropTypes.func.isRequired,\n  preventKeyboardFocus: PropTypes.bool.isRequired,\n  markToday: PropTypes.bool.isRequired,\n  markOutsideDays: PropTypes.bool.isRequired,\n  isKeyboardFocusable: PropTypes.bool.isRequired,\n  month: PropTypes.instanceOf(Date).isRequired,\n  weekStartsOn: PropTypes.number.isRequired,\n  daysOfWeek: deprecated(CustomPropTypes.DaysOfWeek, 'daysOfWeek property in Week is now deprecated as no longer part of the calendar, so is no longer required'),\n  focusedDate: PropTypes.instanceOf(Date),\n  maxDate: PropTypes.instanceOf(Date),\n  minDate: PropTypes.instanceOf(Date),\n  cellClassName: PropTypes.string,\n  onDateClick: PropTypes.func,\n  onDateKeyDown: PropTypes.func,\n  selectionConfiguration: CustomPropTypes.SelectionConfiguration,\n  selectedDate: deprecated(PropTypes.instanceOf(Date), 'Use selectionConfiguration to set selectedDate'),\n  selectionEnd: PropTypes.instanceOf(Date),\n  selectionStart: PropTypes.instanceOf(Date),\n  // eslint-disable-next-line react/require-default-props\n  showWeekendSeparator: deprecated(PropTypes.bool, 'The showWeekendSeparator prop in Week is now deprecated as no longer part of the calendar, so is no longer required'),\n  ignoreOutsideDate: PropTypes.bool,\n  dateProps: PropTypes.object // eslint-disable-line react/forbid-prop-types\n};\n\nWeek.defaultProps = {\n  cellClassName: null,\n  daysOfWeek: null,\n  focusedDate: null,\n  maxDate: null,\n  minDate: null,\n  onDateClick: null,\n  onDateKeyDown: null,\n  selectionConfiguration: {\n    type: CALENDAR_SELECTION_TYPE.single,\n    date: null\n  },\n  selectedDate: null,\n  selectionEnd: null,\n  selectionStart: null,\n  ignoreOutsideDate: false,\n  dateProps: null\n};\n\n/*\n  DateContainer - one for each date in the grid; wraps the actual BpkCalendarDate (or custom) component\n*/\nconst DateContainer = props => {\n  const {\n    children,\n    className,\n    isBlocked,\n    isEmptyCell,\n    selectionType\n  } = props;\n  const classNames = getClassName('bpk-calendar-grid__date', `bpk-calendar-grid__date--${selectionType}`, className);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"aria-hidden\": isEmptyCell || isBlocked,\n    className: classNames,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 436,\n    columnNumber: 5\n  }, this);\n};\n_c = DateContainer;\nDateContainer.propTypes = {\n  children: PropTypes.element.isRequired,\n  selectionType: PropTypes.string.isRequired,\n  isEmptyCell: PropTypes.bool.isRequired,\n  isBlocked: PropTypes.bool.isRequired,\n  className: PropTypes.string\n};\nDateContainer.defaultProps = {\n  className: null\n};\nexport default Week;\nvar _c;\n$RefreshReg$(_c, \"DateContainer\");","map":{"version":3,"names":["PropTypes","React","Component","cssModules","deprecated","isSameDay","isSameWeek","isSameMonth","isToday","isWithinRange","startOfMonth","endOfMonth","CustomPropTypes","CALENDAR_SELECTION_TYPE","STYLES","SELECTION_TYPES","jsxDEV","_jsxDEV","getClassName","shallowEqualProps","props1","props2","propList","i","length","or","total","bool","getSelectedDate","date","selectionConfiguration","startDate","endDate","sameStartDay","sameEndDay","start","end","getSelectionType","formatDateFull","month","weekStartsOn","ignoreOutsideDate","rangeDates","isEmptyCell","type","single","range","none","middle","singleDateHandler","props","nextProps","currentSelectConfig","nextSelectConfig","dates","rangeDateHandler","startDateChanged","endDateChanged","Week","shouldComponentUpdate","shallowProps","focusedDate","minDate","maxDate","render","DateComponent","dateModifiers","dateProps","isKeyboardFocusable","markOutsideDays","markToday","onDateClick","onDateKeyDown","preventKeyboardFocus","daysOutside","map","shouldRender","reduce","className","children","isBlocked","dateSelectionType","DateContainer","cellClassName","selectionType","modifiers","onClick","isFocused","isSelected","isOutside","fileName","_jsxFileName","lineNumber","columnNumber","getDate","propTypes","elementType","isRequired","DateModifiers","arrayOf","Date","func","instanceOf","number","daysOfWeek","DaysOfWeek","string","SelectionConfiguration","selectedDate","selectionEnd","selectionStart","showWeekendSeparator","object","defaultProps","classNames","_c","element","$RefreshReg$"],"sources":["/Users/pritam/Desktop/my-app/node_modules/bpk-component-calendar/src/Week.js"],"sourcesContent":["/*\n * Backpack - Skyscanner's Design System\n *\n * Copyright 2016 Skyscanner Ltd\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { cssModules, deprecated } from 'bpk-react-utils';\n\nimport {\n  isSameDay,\n  isSameWeek,\n  isSameMonth,\n  isToday,\n  isWithinRange,\n  startOfMonth,\n  endOfMonth,\n} from './date-utils';\nimport CustomPropTypes, { CALENDAR_SELECTION_TYPE } from './custom-proptypes';\n// TODO: Move this to `Week.scss`\n// This should be using its own css file as `BpkCalendarGrid` is also importing `BpkCalendarGrid.module.scss`\n// and the order of css imports can break the component.\nimport STYLES from './BpkCalendarGrid.module.scss';\nimport { SELECTION_TYPES } from './BpkCalendarDate';\n\nconst getClassName = cssModules(STYLES);\n\nconst shallowEqualProps = (props1, props2, propList) => {\n  let i = 0;\n  for (; i < propList.length; i += 1) {\n    if (props1[propList[i]] !== props2[propList[i]]) {\n      return false;\n    }\n  }\n  return true;\n};\n\nfunction or(total, bool) {\n  return total || bool;\n}\n\n/**\n * Determines if the current date is selected\n * @param {Date} date the current date from the calendar\n * @param {Object} selectionConfiguration the current selection configuration\n * @returns {Boolean} true is selected and false if not\n */\nfunction getSelectedDate(date, selectionConfiguration) {\n  const startDate =\n    selectionConfiguration.date || selectionConfiguration.startDate;\n  const { endDate } = selectionConfiguration;\n  const sameStartDay = isSameDay(date, startDate);\n  const sameEndDay = isSameDay(date, endDate);\n\n  if (\n    (startDate &&\n      endDate &&\n      (sameStartDay ||\n        sameEndDay ||\n        isWithinRange(date, { start: startDate, end: endDate }))) ||\n    (startDate && !endDate && sameStartDay) ||\n    sameStartDay\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Gets the correct selection type for the current date\n * @param {Date} date the current date of the calendar\n * @param {Object} selectionConfiguration the current selection configuration\n * @param {Function} formatDateFull function to format dates\n * @param {Date} month the current month of the calendar\n * @param {Number} weekStartsOn index of the first day of the week\n * @param {Boolean} ignoreOutsideDate ignore date outside current month\n * @returns {String} selection type to be passed to the date\n */\nfunction getSelectionType(\n  date,\n  selectionConfiguration,\n  formatDateFull,\n  month,\n  weekStartsOn,\n  ignoreOutsideDate,\n) {\n  const { endDate, startDate } = selectionConfiguration;\n  const sameStartDay = isSameDay(date, startDate);\n  const sameEndDay = isSameDay(date, endDate);\n  const rangeDates = startDate && endDate;\n  const isEmptyCell = !isSameMonth(date, month) && ignoreOutsideDate;\n\n  if (\n    selectionConfiguration.type === CALENDAR_SELECTION_TYPE.single &&\n    selectionConfiguration.date &&\n    (selectionConfiguration.date === formatDateFull(date) ||\n      formatDateFull(selectionConfiguration.date) === formatDateFull(date))\n  ) {\n    return SELECTION_TYPES.single;\n  }\n  if (selectionConfiguration.type === CALENDAR_SELECTION_TYPE.range) {\n    if (\n      (startDate && !endDate && sameStartDay) ||\n      (rangeDates && sameStartDay && sameEndDay)\n    ) {\n      return SELECTION_TYPES.single;\n    }\n    if (\n      isEmptyCell &&\n      rangeDates &&\n      ((isSameWeek(startDate, startOfMonth(startDate), { weekStartsOn }) &&\n        isSameWeek(date, startDate, { weekStartsOn })) ||\n        (isSameWeek(endDate, endOfMonth(endDate), { weekStartsOn }) &&\n          isSameWeek(date, endDate, { weekStartsOn })))\n    ) {\n      return SELECTION_TYPES.none;\n    }\n    if (\n      isEmptyCell &&\n      rangeDates &&\n      !isSameMonth(startDate, endDate) &&\n      ((isSameWeek(startDate, endOfMonth(startDate), { weekStartsOn }) &&\n        isSameWeek(date, startDate, { weekStartsOn })) ||\n        (isSameWeek(endDate, startOfMonth(endDate), { weekStartsOn }) &&\n          isSameWeek(date, endDate, { weekStartsOn })))\n    ) {\n      return SELECTION_TYPES.middle;\n    }\n    if (\n      rangeDates &&\n      isWithinRange(date, { start: startDate, end: endDate }) &&\n      !sameStartDay &&\n      !sameEndDay\n    ) {\n      return SELECTION_TYPES.middle;\n    }\n    if (startDate && formatDateFull(startDate) === formatDateFull(date)) {\n      return SELECTION_TYPES.start;\n    }\n    if (endDate && formatDateFull(endDate) === formatDateFull(date)) {\n      return SELECTION_TYPES.end;\n    }\n  }\n\n  return SELECTION_TYPES.none;\n}\n\n/**\n * Handles changing selected date when in single mode\n * @param {Object} props current props\n * @param {Object} nextProps next props as the component is updating\n * @returns {Boolean} based on if the date has changed\n */\nconst singleDateHandler = (props, nextProps) => {\n  const currentSelectConfig = props.selectionConfiguration;\n  const nextSelectConfig = nextProps.selectionConfiguration;\n\n  if (\n    (isSameWeek(nextSelectConfig.date, nextProps.dates[0], {\n      weekStartsOn: nextProps.weekStartsOn,\n    }) ||\n      isSameWeek(currentSelectConfig.date, props.dates[0], {\n        weekStartsOn: props.weekStartsOn,\n      })) &&\n    currentSelectConfig.date !== nextSelectConfig.date\n  ) {\n    return true;\n  }\n  return false;\n};\n\n/**\n * Handles changing selected date when in range mode\n * @param {Object} props current props\n * @param {Object} nextProps next props as the component is updating\n * @returns {Boolean} based on if the date has changed\n */\nconst rangeDateHandler = (props, nextProps) => {\n  const startDateChanged = !isSameDay(\n    props.selectionConfiguration.startDate,\n    nextProps.selectionConfiguration.startDate,\n  );\n  const endDateChanged = !isSameDay(\n    props.selectionConfiguration.endDate,\n    nextProps.selectionConfiguration.endDate,\n  );\n\n  if (startDateChanged || endDateChanged) {\n    return true;\n  }\n\n  return false;\n};\n\n/*\n  Week - table row containing a week full of DateContainer components\n*/\nclass Week extends Component {\n  shouldComponentUpdate(nextProps) {\n    const shallowProps = [\n      'DateComponent',\n      'dateModifiers',\n      'formatDateFull',\n      'isKeyboardFocusable',\n      'markOutsideDays',\n      'markToday',\n      'onDateClick',\n      'onDateKeyDown',\n      'preventKeyboardFocus',\n      'weekStartsOn',\n      'dates',\n      'cellClassName',\n    ];\n\n    // If any of the props have changed, component should update.\n    if (!shallowEqualProps(this.props, nextProps, shallowProps)) {\n      return true;\n    }\n\n    // If focusedDate is changing, and it'll be included as part\n    // of either the week we're rendering now or the next week\n    // we'll render, component should update.\n    if (\n      (isSameWeek(nextProps.focusedDate, nextProps.dates[0], {\n        weekStartsOn: nextProps.weekStartsOn,\n      }) ||\n        isSameWeek(this.props.focusedDate, this.props.dates[0], {\n          weekStartsOn: this.props.weekStartsOn,\n        })) &&\n      this.props.focusedDate !== nextProps.focusedDate\n    ) {\n      return true;\n    }\n\n    // If selected date is changing, and it'll be included as part\n    // of either the week we're rendering now or the next week we'll\n    // render, component should update.\n    if (\n      this.props.selectionConfiguration.type ===\n        CALENDAR_SELECTION_TYPE.single &&\n      this.props.selectionConfiguration.date\n    ) {\n      return singleDateHandler(this.props, nextProps);\n    }\n    if (\n      this.props.selectionConfiguration.type === CALENDAR_SELECTION_TYPE.range\n    ) {\n      return rangeDateHandler(this.props, nextProps);\n    }\n\n    // If min date is changing, component should update.\n    if (nextProps.minDate) {\n      if (nextProps.minDate !== this.props.minDate) {\n        return true;\n      }\n      if (!isSameDay(nextProps.minDate, this.props.minDate)) {\n        return true;\n      }\n    }\n\n    // If max date is changing, component should update.\n    if (nextProps.maxDate) {\n      if (nextProps.maxDate !== this.props.maxDate) {\n        return true;\n      }\n      if (!isSameDay(nextProps.maxDate, this.props.maxDate)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  render() {\n    const {\n      DateComponent,\n      dateModifiers,\n      dateProps,\n      focusedDate,\n      formatDateFull,\n      ignoreOutsideDate,\n      isKeyboardFocusable,\n      markOutsideDays,\n      markToday,\n      maxDate,\n      minDate,\n      month,\n      onDateClick,\n      onDateKeyDown,\n      preventKeyboardFocus,\n      selectionConfiguration,\n      weekStartsOn,\n    } = this.props;\n\n    if (ignoreOutsideDate) {\n      const daysOutside = this.props.dates.map((date) =>\n        isSameMonth(date, month),\n      );\n\n      const shouldRender = daysOutside.reduce(or);\n\n      if (!shouldRender) {\n        return null;\n      }\n    }\n\n    return (\n      <div className={getClassName('bpk-calendar-grid__week')}>\n        {this.props.dates.map((date) => {\n          const isBlocked =\n            minDate && maxDate\n              ? !isWithinRange(date, { start: minDate, end: maxDate })\n              : false;\n\n          const dateSelectionType = getSelectionType(\n            date,\n            selectionConfiguration,\n            formatDateFull,\n            month,\n            weekStartsOn,\n            ignoreOutsideDate,\n          );\n\n          return (\n            <DateContainer\n              className={this.props.cellClassName}\n              isEmptyCell={!isSameMonth(date, month) && ignoreOutsideDate}\n              isBlocked={isBlocked}\n              key={date.getDate()}\n              selectionType={dateSelectionType}\n            >\n              <DateComponent\n                date={date}\n                modifiers={dateModifiers}\n                aria-label={formatDateFull(date)}\n                onClick={onDateClick}\n                onDateKeyDown={onDateKeyDown}\n                preventKeyboardFocus={preventKeyboardFocus}\n                isKeyboardFocusable={isKeyboardFocusable}\n                isFocused={isSameDay(date, focusedDate)}\n                isSelected={getSelectedDate(date, selectionConfiguration)}\n                isBlocked={isBlocked}\n                isOutside={markOutsideDays && !isSameMonth(date, month)}\n                isToday={markToday && isToday(date)}\n                selectionType={dateSelectionType}\n                {...dateProps}\n              />\n            </DateContainer>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nWeek.propTypes = {\n  DateComponent: PropTypes.elementType.isRequired,\n  dateModifiers: CustomPropTypes.DateModifiers.isRequired,\n  dates: PropTypes.arrayOf(Date).isRequired,\n  formatDateFull: PropTypes.func.isRequired,\n  preventKeyboardFocus: PropTypes.bool.isRequired,\n  markToday: PropTypes.bool.isRequired,\n  markOutsideDays: PropTypes.bool.isRequired,\n  isKeyboardFocusable: PropTypes.bool.isRequired,\n  month: PropTypes.instanceOf(Date).isRequired,\n  weekStartsOn: PropTypes.number.isRequired,\n  daysOfWeek: deprecated(\n    CustomPropTypes.DaysOfWeek,\n    'daysOfWeek property in Week is now deprecated as no longer part of the calendar, so is no longer required',\n  ),\n  focusedDate: PropTypes.instanceOf(Date),\n  maxDate: PropTypes.instanceOf(Date),\n  minDate: PropTypes.instanceOf(Date),\n  cellClassName: PropTypes.string,\n  onDateClick: PropTypes.func,\n  onDateKeyDown: PropTypes.func,\n  selectionConfiguration: CustomPropTypes.SelectionConfiguration,\n  selectedDate: deprecated(\n    PropTypes.instanceOf(Date),\n    'Use selectionConfiguration to set selectedDate',\n  ),\n  selectionEnd: PropTypes.instanceOf(Date),\n  selectionStart: PropTypes.instanceOf(Date),\n  // eslint-disable-next-line react/require-default-props\n  showWeekendSeparator: deprecated(\n    PropTypes.bool,\n    'The showWeekendSeparator prop in Week is now deprecated as no longer part of the calendar, so is no longer required',\n  ),\n  ignoreOutsideDate: PropTypes.bool,\n  dateProps: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n};\n\nWeek.defaultProps = {\n  cellClassName: null,\n  daysOfWeek: null,\n  focusedDate: null,\n  maxDate: null,\n  minDate: null,\n  onDateClick: null,\n  onDateKeyDown: null,\n  selectionConfiguration: { type: CALENDAR_SELECTION_TYPE.single, date: null },\n  selectedDate: null,\n  selectionEnd: null,\n  selectionStart: null,\n  ignoreOutsideDate: false,\n  dateProps: null,\n};\n\n/*\n  DateContainer - one for each date in the grid; wraps the actual BpkCalendarDate (or custom) component\n*/\nconst DateContainer = (props) => {\n  const { children, className, isBlocked, isEmptyCell, selectionType } = props;\n\n  const classNames = getClassName(\n    'bpk-calendar-grid__date',\n    `bpk-calendar-grid__date--${selectionType}`,\n    className,\n  );\n\n  return (\n    <div aria-hidden={isEmptyCell || isBlocked} className={classNames}>\n      {children}\n    </div>\n  );\n};\n\nDateContainer.propTypes = {\n  children: PropTypes.element.isRequired,\n  selectionType: PropTypes.string.isRequired,\n  isEmptyCell: PropTypes.bool.isRequired,\n  isBlocked: PropTypes.bool.isRequired,\n  className: PropTypes.string,\n};\n\nDateContainer.defaultProps = {\n  className: null,\n};\n\nexport default Week;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}